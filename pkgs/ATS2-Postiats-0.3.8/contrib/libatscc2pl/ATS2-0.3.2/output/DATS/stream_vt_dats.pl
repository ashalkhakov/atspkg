######
##
## The Perl code is generated by atscc2pl
## The starting compilation time is: 2017-10-23: 14h:29m
##
######
sub
_ats2plpre_stream_vt_patsfun_10__closurerize($)
{
  my($env0) = @_;
  return [sub{ my($cenv) = @_; return _ats2plpre_stream_vt_patsfun_10($cenv->[1]); }, $env0];
}

sub
_ats2plpre_stream_vt_patsfun_13__closurerize($$)
{
  my($env0, $env1) = @_;
  return [sub{ my($cenv, $arg0) = @_; return _ats2plpre_stream_vt_patsfun_13($cenv->[1], $cenv->[2], $arg0); }, $env0, $env1];
}

sub
_ats2plpre_stream_vt_patsfun_21__closurerize($$)
{
  my($env0, $env1) = @_;
  return [sub{ my($cenv, $arg0) = @_; return _ats2plpre_stream_vt_patsfun_21($cenv->[1], $cenv->[2], $arg0); }, $env0, $env1];
}

sub
_ats2plpre_stream_vt_patsfun_24__closurerize($)
{
  my($env0) = @_;
  return [sub{ my($cenv, $arg0) = @_; return _ats2plpre_stream_vt_patsfun_24($cenv->[1], $arg0); }, $env0];
}

sub
_ats2plpre_stream_vt_patsfun_27__closurerize($$)
{
  my($env0, $env1) = @_;
  return [sub{ my($cenv, $arg0) = @_; return _ats2plpre_stream_vt_patsfun_27($cenv->[1], $cenv->[2], $arg0); }, $env0, $env1];
}

sub
_ats2plpre_stream_vt_patsfun_29__closurerize($)
{
  my($env0) = @_;
  return [sub{ my($cenv, $arg0) = @_; return _ats2plpre_stream_vt_patsfun_29($cenv->[1], $arg0); }, $env0];
}

sub
_ats2plpre_stream_vt_patsfun_32__closurerize($$)
{
  my($env0, $env1) = @_;
  return [sub{ my($cenv, $arg0) = @_; return _ats2plpre_stream_vt_patsfun_32($cenv->[1], $cenv->[2], $arg0); }, $env0, $env1];
}

sub
_ats2plpre_stream_vt_patsfun_34__closurerize($)
{
  my($env0) = @_;
  return [sub{ my($cenv, $arg0) = @_; return _ats2plpre_stream_vt_patsfun_34($cenv->[1], $arg0); }, $env0];
}

sub
_ats2plpre_stream_vt_patsfun_37__closurerize($$)
{
  my($env0, $env1) = @_;
  return [sub{ my($cenv, $arg0) = @_; return _ats2plpre_stream_vt_patsfun_37($cenv->[1], $cenv->[2], $arg0); }, $env0, $env1];
}

sub
_ats2plpre_stream_vt_patsfun_39__closurerize($)
{
  my($env0) = @_;
  return [sub{ my($cenv, $arg0) = @_; return _ats2plpre_stream_vt_patsfun_39($cenv->[1], $arg0); }, $env0];
}

sub
_ats2plpre_stream_vt_patsfun_43__closurerize($)
{
  my($env0) = @_;
  return [sub{ my($cenv, $arg0) = @_; return _ats2plpre_stream_vt_patsfun_43($cenv->[1], $arg0); }, $env0];
}

sub
_ats2plpre_stream_vt_patsfun_47__closurerize($)
{
  my($env0) = @_;
  return [sub{ my($cenv, $arg0) = @_; return _ats2plpre_stream_vt_patsfun_47($cenv->[1], $arg0); }, $env0];
}

sub
_ats2plpre_stream_vt_patsfun_51__closurerize($)
{
  my($env0) = @_;
  return [sub{ my($cenv, $arg0) = @_; return _ats2plpre_stream_vt_patsfun_51($cenv->[1], $arg0); }, $env0];
}

sub
_ats2plpre_stream_vt_patsfun_55__closurerize($)
{
  my($env0) = @_;
  return [sub{ my($cenv, $arg0) = @_; return _ats2plpre_stream_vt_patsfun_55($cenv->[1], $arg0); }, $env0];
}

sub
_ats2plpre_stream_vt_patsfun_59__closurerize($)
{
  my($env0) = @_;
  return [sub{ my($cenv, $arg0) = @_; return _ats2plpre_stream_vt_patsfun_59($cenv->[1], $arg0); }, $env0];
}

sub
_ats2plpre_stream_vt_patsfun_62__closurerize($$)
{
  my($env0, $env1) = @_;
  return [sub{ my($cenv, $arg0) = @_; return _ats2plpre_stream_vt_patsfun_62($cenv->[1], $cenv->[2], $arg0); }, $env0, $env1];
}


sub
ats2plpre_stream_vt_free($)
{
##
  my($arg0) = @_;
##
##
  __patsflab_stream_vt_free:
  atspre_lazy_vt_free($arg0);
  return;#_void
} #end-of-function


sub
ats2plpre_stream_vt2t($)
{
##
  my($arg0) = @_;
##
  my $tmpret11;
##
  __patsflab_stream_vt2t:
  $tmpret11 = _ats2plpre_stream_vt_aux_9($arg0);
  return $tmpret11;
} #end-of-function


sub
_ats2plpre_stream_vt_aux_9($)
{
##
  my($arg0) = @_;
##
  my $tmpret12;
##
  __patsflab__ats2plpre_stream_vt_aux_9:
  $tmpret12 = ATSPMVlazyval(_ats2plpre_stream_vt_patsfun_10__closurerize($arg0));
  return $tmpret12;
} #end-of-function


sub
_ats2plpre_stream_vt_patsfun_10($)
{
##
  my($env0) = @_;
##
  my $tmpret13;
  my $tmp14;
  my $tmp15;
  my $tmp16;
  my $tmp17;
##
  __patsflab__ats2plpre_stream_vt_patsfun_10:
  $tmp14 = ATSPMVllazyval_eval($env0);
  #ATScaseofseq_beg
  while(1)
  {
    #ATSbranchseq_beg
    __atstmplab0:
    if(ATSCKptriscons($tmp14)) { goto __atstmplab3; }
    __atstmplab1:
    $tmpret13 = 0;
    last;
    #ATSbranchseq_end
    #ATSbranchseq_beg
    __atstmplab2:
    __atstmplab3:
    $tmp15 = $tmp14->[0];
    $tmp16 = $tmp14->[1];
    #ATSINSfreecon($tmp14);
    $tmp17 = _ats2plpre_stream_vt_aux_9($tmp16);
    $tmpret13 = [$tmp15, $tmp17];
    last;
    #ATSbranchseq_end
  } #end-of-while-loop;
  #ATScaseofseq_end
  return $tmpret13;
} #end-of-function


sub
ats2plpre_stream_vt_takeLte($$)
{
##
  my($arg0, $arg1) = @_;
##
  my $tmpret18;
##
  __patsflab_stream_vt_takeLte:
  $tmpret18 = _ats2plpre_stream_vt_auxmain_12($arg0, $arg1);
  return $tmpret18;
} #end-of-function


sub
_ats2plpre_stream_vt_auxmain_12($$)
{
##
  my($arg0, $arg1) = @_;
##
  my $tmpret19;
##
  __patsflab__ats2plpre_stream_vt_auxmain_12:
  $tmpret19 = ATSPMVllazyval(_ats2plpre_stream_vt_patsfun_13__closurerize($arg0, $arg1));
  return $tmpret19;
} #end-of-function


sub
_ats2plpre_stream_vt_patsfun_13($$$)
{
##
  my($env0, $env1, $arg0) = @_;
##
  my $tmpret20;
  my $tmp21;
  my $tmp22;
  my $tmp23;
  my $tmp24;
  my $tmp25;
  my $tmp26;
##
  __patsflab__ats2plpre_stream_vt_patsfun_13:
  if($arg0) {
    $tmp21 = ats2plpre_gt_int1_int1($env1, 0);
    if($tmp21) {
      $tmp22 = ATSPMVllazyval_eval($env0);
      #ATScaseofseq_beg
      while(1)
      {
        #ATSbranchseq_beg
        __atstmplab4:
        if(ATSCKptriscons($tmp22)) { goto __atstmplab7; }
        __atstmplab5:
        $tmpret20 = 0;
        last;
        #ATSbranchseq_end
        #ATSbranchseq_beg
        __atstmplab6:
        __atstmplab7:
        $tmp23 = $tmp22->[0];
        $tmp24 = $tmp22->[1];
        #ATSINSfreecon($tmp22);
        $tmp26 = ats2plpre_sub_int1_int1($env1, 1);
        $tmp25 = _ats2plpre_stream_vt_auxmain_12($tmp24, $tmp26);
        $tmpret20 = [$tmp23, $tmp25];
        last;
        #ATSbranchseq_end
      } #end-of-while-loop;
      #ATScaseofseq_end
    } else {
      atspre_lazy_vt_free($env0);
      $tmpret20 = 0;
    } #endif
  } else {
    atspre_lazy_vt_free($env0);
  } #endif
  return $tmpret20;
} #end-of-function


sub
ats2plpre_stream_vt_length($)
{
##
  my($arg0) = @_;
##
  my $tmpret29;
##
  __patsflab_stream_vt_length:
  $tmpret29 = _ats2plpre_stream_vt_loop_15($arg0, 0);
  return $tmpret29;
} #end-of-function


sub
_ats2plpre_stream_vt_loop_15($$)
{
##
  my($arg0, $arg1) = @_;
##
  my $apy0;
  my $apy1;
  my $tmpret30;
  my $tmp31;
  my $tmp33;
  my $tmp34;
##
  __patsflab__ats2plpre_stream_vt_loop_15:
  $tmp31 = ATSPMVllazyval_eval($arg0);
  #ATScaseofseq_beg
  while(1)
  {
    #ATSbranchseq_beg
    __atstmplab8:
    if(ATSCKptriscons($tmp31)) { goto __atstmplab11; }
    __atstmplab9:
    $tmpret30 = $arg1;
    last;
    #ATSbranchseq_end
    #ATSbranchseq_beg
    __atstmplab10:
    __atstmplab11:
    $tmp33 = $tmp31->[1];
    #ATSINSfreecon($tmp31);
    $tmp34 = ats2plpre_add_int1_int1($arg1, 1);
    #ATStailcalseq_beg
    $apy0 = $tmp33;
    $apy1 = $tmp34;
    $arg0 = $apy0;
    $arg1 = $apy1;
    goto __patsflab__ats2plpre_stream_vt_loop_15;
    #ATStailcalseq_end
    last;
    #ATSbranchseq_end
  } #end-of-while-loop;
  #ATScaseofseq_end
  return $tmpret30;
} #end-of-function


sub
ats2plpre_stream2list_vt($)
{
##
  my($arg0) = @_;
##
  my $tmpret35;
  my $tmp36;
##
  __patsflab_stream2list_vt:
  $tmp36 = ats2plpre_stream2list_vt_rev($arg0);
  $tmpret35 = ats2plpre_list_vt_reverse($tmp36);
  return $tmpret35;
} #end-of-function


sub
ats2plpre_stream2list_vt_rev($)
{
##
  my($arg0) = @_;
##
  my $tmpret37;
  my $tmp43;
##
  __patsflab_stream2list_vt_rev:
  $tmp43 = 0;
  $tmpret37 = _ats2plpre_stream_vt_loop_18($arg0, $tmp43);
  return $tmpret37;
} #end-of-function


sub
_ats2plpre_stream_vt_loop_18($$)
{
##
  my($arg0, $arg1) = @_;
##
  my $apy0;
  my $apy1;
  my $tmpret38;
  my $tmp39;
  my $tmp40;
  my $tmp41;
  my $tmp42;
##
  __patsflab__ats2plpre_stream_vt_loop_18:
  $tmp39 = ATSPMVllazyval_eval($arg0);
  #ATScaseofseq_beg
  while(1)
  {
    #ATSbranchseq_beg
    __atstmplab12:
    if(ATSCKptriscons($tmp39)) { goto __atstmplab15; }
    __atstmplab13:
    $tmpret38 = $arg1;
    last;
    #ATSbranchseq_end
    #ATSbranchseq_beg
    __atstmplab14:
    __atstmplab15:
    $tmp40 = $tmp39->[0];
    $tmp41 = $tmp39->[1];
    #ATSINSfreecon($tmp39);
    $tmp42 = [$tmp40, $arg1];
    #ATStailcalseq_beg
    $apy0 = $tmp41;
    $apy1 = $tmp42;
    $arg0 = $apy0;
    $arg1 = $apy1;
    goto __patsflab__ats2plpre_stream_vt_loop_18;
    #ATStailcalseq_end
    last;
    #ATSbranchseq_end
  } #end-of-while-loop;
  #ATScaseofseq_end
  return $tmpret38;
} #end-of-function


sub
ats2plpre_stream_vt_append($$)
{
##
  my($arg0, $arg1) = @_;
##
  my $tmpret44;
##
  __patsflab_stream_vt_append:
  $tmpret44 = _ats2plpre_stream_vt_auxmain_20($arg0, $arg1);
  return $tmpret44;
} #end-of-function


sub
_ats2plpre_stream_vt_auxmain_20($$)
{
##
  my($arg0, $arg1) = @_;
##
  my $tmpret45;
##
  __patsflab__ats2plpre_stream_vt_auxmain_20:
  $tmpret45 = ATSPMVllazyval(_ats2plpre_stream_vt_patsfun_21__closurerize($arg0, $arg1));
  return $tmpret45;
} #end-of-function


sub
_ats2plpre_stream_vt_patsfun_21($$$)
{
##
  my($env0, $env1, $arg0) = @_;
##
  my $tmpret46;
  my $tmp47;
  my $tmp48;
  my $tmp49;
  my $tmp50;
##
  __patsflab__ats2plpre_stream_vt_patsfun_21:
  if($arg0) {
    $tmp47 = ATSPMVllazyval_eval($env0);
    #ATScaseofseq_beg
    while(1)
    {
      #ATSbranchseq_beg
      __atstmplab16:
      if(ATSCKptriscons($tmp47)) { goto __atstmplab19; }
      __atstmplab17:
      $tmpret46 = ATSPMVllazyval_eval($env1);
      last;
      #ATSbranchseq_end
      #ATSbranchseq_beg
      __atstmplab18:
      __atstmplab19:
      $tmp48 = $tmp47->[0];
      $tmp49 = $tmp47->[1];
      #ATSINSfreecon($tmp47);
      $tmp50 = _ats2plpre_stream_vt_auxmain_20($tmp49, $env1);
      $tmpret46 = [$tmp48, $tmp50];
      last;
      #ATSbranchseq_end
    } #end-of-while-loop;
    #ATScaseofseq_end
  } else {
    atspre_lazy_vt_free($env0);
    atspre_lazy_vt_free($env1);
  } #endif
  return $tmpret46;
} #end-of-function


sub
ats2plpre_stream_vt_concat($)
{
##
  my($arg0) = @_;
##
  my $tmpret53;
##
  __patsflab_stream_vt_concat:
  $tmpret53 = _ats2plpre_stream_vt_auxmain_23($arg0);
  return $tmpret53;
} #end-of-function


sub
_ats2plpre_stream_vt_auxmain_23($)
{
##
  my($arg0) = @_;
##
  my $tmpret54;
##
  __patsflab__ats2plpre_stream_vt_auxmain_23:
  $tmpret54 = ATSPMVllazyval(_ats2plpre_stream_vt_patsfun_24__closurerize($arg0));
  return $tmpret54;
} #end-of-function


sub
_ats2plpre_stream_vt_patsfun_24($$)
{
##
  my($env0, $arg0) = @_;
##
  my $tmpret55;
  my $tmp56;
  my $tmp57;
  my $tmp58;
  my $tmp59;
  my $tmp60;
##
  __patsflab__ats2plpre_stream_vt_patsfun_24:
  if($arg0) {
    $tmp56 = ATSPMVllazyval_eval($env0);
    #ATScaseofseq_beg
    while(1)
    {
      #ATSbranchseq_beg
      __atstmplab20:
      if(ATSCKptriscons($tmp56)) { goto __atstmplab23; }
      __atstmplab21:
      $tmpret55 = 0;
      last;
      #ATSbranchseq_end
      #ATSbranchseq_beg
      __atstmplab22:
      __atstmplab23:
      $tmp57 = $tmp56->[0];
      $tmp58 = $tmp56->[1];
      #ATSINSfreecon($tmp56);
      $tmp60 = _ats2plpre_stream_vt_auxmain_23($tmp58);
      $tmp59 = ats2plpre_stream_vt_append($tmp57, $tmp60);
      $tmpret55 = ATSPMVllazyval_eval($tmp59);
      last;
      #ATSbranchseq_end
    } #end-of-while-loop;
    #ATScaseofseq_end
  } else {
    atspre_lazy_vt_free($env0);
  } #endif
  return $tmpret55;
} #end-of-function


sub
ats2plpre_stream_vt_map_cloref($$)
{
##
  my($arg0, $arg1) = @_;
##
  my $tmpret62;
##
  __patsflab_stream_vt_map_cloref:
  $tmpret62 = _ats2plpre_stream_vt_auxmain_26($arg1, $arg0);
  return $tmpret62;
} #end-of-function


sub
_ats2plpre_stream_vt_auxmain_26($$)
{
##
  my($env0, $arg0) = @_;
##
  my $tmpret63;
##
  __patsflab__ats2plpre_stream_vt_auxmain_26:
  $tmpret63 = ATSPMVllazyval(_ats2plpre_stream_vt_patsfun_27__closurerize($env0, $arg0));
  return $tmpret63;
} #end-of-function


sub
_ats2plpre_stream_vt_patsfun_27($$$)
{
##
  my($env0, $env1, $arg0) = @_;
##
  my $tmpret64;
  my $tmp65;
  my $tmp66;
  my $tmp67;
  my $tmp68;
  my $tmp69;
##
  __patsflab__ats2plpre_stream_vt_patsfun_27:
  if($arg0) {
    $tmp65 = ATSPMVllazyval_eval($env1);
    #ATScaseofseq_beg
    while(1)
    {
      #ATSbranchseq_beg
      __atstmplab24:
      if(ATSCKptriscons($tmp65)) { goto __atstmplab27; }
      __atstmplab25:
      $tmpret64 = 0;
      last;
      #ATSbranchseq_end
      #ATSbranchseq_beg
      __atstmplab26:
      __atstmplab27:
      $tmp66 = $tmp65->[0];
      $tmp67 = $tmp65->[1];
      #ATSINSfreecon($tmp65);
      $tmp68 = &{$env0->[0]}($env0, $tmp66);
      $tmp69 = _ats2plpre_stream_vt_auxmain_26($env0, $tmp67);
      $tmpret64 = [$tmp68, $tmp69];
      last;
      #ATSbranchseq_end
    } #end-of-while-loop;
    #ATScaseofseq_end
  } else {
    atspre_lazy_vt_free($env1);
  } #endif
  return $tmpret64;
} #end-of-function


sub
ats2plpre_stream_vt_map_method($$)
{
##
  my($arg0, $arg1) = @_;
##
  my $tmpret71;
##
  __patsflab_stream_vt_map_method:
  $tmpret71 = _ats2plpre_stream_vt_patsfun_29__closurerize($arg0);
  return $tmpret71;
} #end-of-function


sub
_ats2plpre_stream_vt_patsfun_29($$)
{
##
  my($env0, $arg0) = @_;
##
  my $tmpret72;
##
  __patsflab__ats2plpre_stream_vt_patsfun_29:
  $tmpret72 = ats2plpre_stream_vt_map_cloref($env0, $arg0);
  return $tmpret72;
} #end-of-function


sub
ats2plpre_stream_vt_mapopt_cloref($$)
{
##
  my($arg0, $arg1) = @_;
##
  my $tmpret73;
##
  __patsflab_stream_vt_mapopt_cloref:
  $tmpret73 = _ats2plpre_stream_vt_auxmain_31($arg1, $arg0);
  return $tmpret73;
} #end-of-function


sub
_ats2plpre_stream_vt_auxmain_31($$)
{
##
  my($env0, $arg0) = @_;
##
  my $tmpret74;
##
  __patsflab__ats2plpre_stream_vt_auxmain_31:
  $tmpret74 = ATSPMVllazyval(_ats2plpre_stream_vt_patsfun_32__closurerize($env0, $arg0));
  return $tmpret74;
} #end-of-function


sub
_ats2plpre_stream_vt_patsfun_32($$$)
{
##
  my($env0, $env1, $arg0) = @_;
##
  my $tmpret75;
  my $tmp76;
  my $tmp77;
  my $tmp78;
  my $tmp79;
  my $tmp80;
  my $tmp81;
  my $tmp82;
##
  __patsflab__ats2plpre_stream_vt_patsfun_32:
  if($arg0) {
    $tmp76 = ATSPMVllazyval_eval($env1);
    #ATScaseofseq_beg
    while(1)
    {
      #ATSbranchseq_beg
      __atstmplab28:
      if(ATSCKptriscons($tmp76)) { goto __atstmplab31; }
      __atstmplab29:
      $tmpret75 = 0;
      last;
      #ATSbranchseq_end
      #ATSbranchseq_beg
      __atstmplab30:
      __atstmplab31:
      $tmp77 = $tmp76->[0];
      $tmp78 = $tmp76->[1];
      #ATSINSfreecon($tmp76);
      $tmp79 = &{$env0->[0]}($env0, $tmp77);
      #ATScaseofseq_beg
      while(1)
      {
        #ATSbranchseq_beg
        __atstmplab32:
        if(ATSCKptriscons($tmp79)) { goto __atstmplab35; }
        __atstmplab33:
        $tmp81 = _ats2plpre_stream_vt_auxmain_31($env0, $tmp78);
        $tmpret75 = ATSPMVllazyval_eval($tmp81);
        last;
        #ATSbranchseq_end
        #ATSbranchseq_beg
        __atstmplab34:
        __atstmplab35:
        $tmp80 = $tmp79->[0];
        #ATSINSfreecon($tmp79);
        $tmp82 = _ats2plpre_stream_vt_auxmain_31($env0, $tmp78);
        $tmpret75 = [$tmp80, $tmp82];
        last;
        #ATSbranchseq_end
      } #end-of-while-loop;
      #ATScaseofseq_end
      last;
      #ATSbranchseq_end
    } #end-of-while-loop;
    #ATScaseofseq_end
  } else {
    atspre_lazy_vt_free($env1);
  } #endif
  return $tmpret75;
} #end-of-function


sub
ats2plpre_stream_vt_mapopt_method($$)
{
##
  my($arg0, $arg1) = @_;
##
  my $tmpret84;
##
  __patsflab_stream_vt_mapopt_method:
  $tmpret84 = _ats2plpre_stream_vt_patsfun_34__closurerize($arg0);
  return $tmpret84;
} #end-of-function


sub
_ats2plpre_stream_vt_patsfun_34($$)
{
##
  my($env0, $arg0) = @_;
##
  my $tmpret85;
##
  __patsflab__ats2plpre_stream_vt_patsfun_34:
  $tmpret85 = ats2plpre_stream_vt_mapopt_cloref($env0, $arg0);
  return $tmpret85;
} #end-of-function


sub
ats2plpre_stream_vt_filter_cloref($$)
{
##
  my($arg0, $arg1) = @_;
##
  my $tmpret86;
##
  __patsflab_stream_vt_filter_cloref:
  $tmpret86 = _ats2plpre_stream_vt_auxmain_36($arg1, $arg0);
  return $tmpret86;
} #end-of-function


sub
_ats2plpre_stream_vt_auxmain_36($$)
{
##
  my($env0, $arg0) = @_;
##
  my $tmpret87;
##
  __patsflab__ats2plpre_stream_vt_auxmain_36:
  $tmpret87 = ATSPMVllazyval(_ats2plpre_stream_vt_patsfun_37__closurerize($env0, $arg0));
  return $tmpret87;
} #end-of-function


sub
_ats2plpre_stream_vt_patsfun_37($$$)
{
##
  my($env0, $env1, $arg0) = @_;
##
  my $tmpret88;
  my $tmp89;
  my $tmp90;
  my $tmp91;
  my $tmp92;
  my $tmp93;
  my $tmp94;
##
  __patsflab__ats2plpre_stream_vt_patsfun_37:
  if($arg0) {
    $tmp89 = ATSPMVllazyval_eval($env1);
    #ATScaseofseq_beg
    while(1)
    {
      #ATSbranchseq_beg
      __atstmplab36:
      if(ATSCKptriscons($tmp89)) { goto __atstmplab39; }
      __atstmplab37:
      $tmpret88 = 0;
      last;
      #ATSbranchseq_end
      #ATSbranchseq_beg
      __atstmplab38:
      __atstmplab39:
      $tmp90 = $tmp89->[0];
      $tmp91 = $tmp89->[1];
      #ATSINSfreecon($tmp89);
      $tmp92 = &{$env0->[0]}($env0, $tmp90);
      if($tmp92) {
        $tmp93 = _ats2plpre_stream_vt_auxmain_36($env0, $tmp91);
        $tmpret88 = [$tmp90, $tmp93];
      } else {
        $tmp94 = _ats2plpre_stream_vt_auxmain_36($env0, $tmp91);
        $tmpret88 = ATSPMVllazyval_eval($tmp94);
      } #endif
      last;
      #ATSbranchseq_end
    } #end-of-while-loop;
    #ATScaseofseq_end
  } else {
    atspre_lazy_vt_free($env1);
  } #endif
  return $tmpret88;
} #end-of-function


sub
ats2plpre_stream_vt_filter_method($)
{
##
  my($arg0) = @_;
##
  my $tmpret96;
##
  __patsflab_stream_vt_filter_method:
  $tmpret96 = _ats2plpre_stream_vt_patsfun_39__closurerize($arg0);
  return $tmpret96;
} #end-of-function


sub
_ats2plpre_stream_vt_patsfun_39($$)
{
##
  my($env0, $arg0) = @_;
##
  my $tmpret97;
##
  __patsflab__ats2plpre_stream_vt_patsfun_39:
  $tmpret97 = ats2plpre_stream_vt_filter_cloref($env0, $arg0);
  return $tmpret97;
} #end-of-function


sub
ats2plpre_stream_vt_exists_cloref($$)
{
##
  my($arg0, $arg1) = @_;
##
  my $tmpret98;
##
  __patsflab_stream_vt_exists_cloref:
  $tmpret98 = _ats2plpre_stream_vt_loop_41($arg1, $arg0);
  return $tmpret98;
} #end-of-function


sub
_ats2plpre_stream_vt_loop_41($$)
{
##
  my($env0, $arg0) = @_;
##
  my $apy0;
  my $tmpret99;
  my $tmp100;
  my $tmp101;
  my $tmp102;
  my $tmp103;
##
  __patsflab__ats2plpre_stream_vt_loop_41:
  $tmp100 = ATSPMVllazyval_eval($arg0);
  #ATScaseofseq_beg
  while(1)
  {
    #ATSbranchseq_beg
    __atstmplab40:
    if(ATSCKptriscons($tmp100)) { goto __atstmplab43; }
    __atstmplab41:
    $tmpret99 = 0;
    last;
    #ATSbranchseq_end
    #ATSbranchseq_beg
    __atstmplab42:
    __atstmplab43:
    $tmp101 = $tmp100->[0];
    $tmp102 = $tmp100->[1];
    #ATSINSfreecon($tmp100);
    $tmp103 = &{$env0->[0]}($env0, $tmp101);
    if($tmp103) {
      atspre_lazy_vt_free($tmp102);
      $tmpret99 = 1;
    } else {
      #ATStailcalseq_beg
      $apy0 = $tmp102;
      $arg0 = $apy0;
      goto __patsflab__ats2plpre_stream_vt_loop_41;
      #ATStailcalseq_end
    } #endif
    last;
    #ATSbranchseq_end
  } #end-of-while-loop;
  #ATScaseofseq_end
  return $tmpret99;
} #end-of-function


sub
ats2plpre_stream_vt_exists_method($)
{
##
  my($arg0) = @_;
##
  my $tmpret105;
##
  __patsflab_stream_vt_exists_method:
  $tmpret105 = _ats2plpre_stream_vt_patsfun_43__closurerize($arg0);
  return $tmpret105;
} #end-of-function


sub
_ats2plpre_stream_vt_patsfun_43($$)
{
##
  my($env0, $arg0) = @_;
##
  my $tmpret106;
##
  __patsflab__ats2plpre_stream_vt_patsfun_43:
  $tmpret106 = ats2plpre_stream_vt_exists_cloref($env0, $arg0);
  return $tmpret106;
} #end-of-function


sub
ats2plpre_stream_vt_forall_cloref($$)
{
##
  my($arg0, $arg1) = @_;
##
  my $tmpret107;
##
  __patsflab_stream_vt_forall_cloref:
  $tmpret107 = _ats2plpre_stream_vt_loop_45($arg1, $arg0);
  return $tmpret107;
} #end-of-function


sub
_ats2plpre_stream_vt_loop_45($$)
{
##
  my($env0, $arg0) = @_;
##
  my $apy0;
  my $tmpret108;
  my $tmp109;
  my $tmp110;
  my $tmp111;
  my $tmp112;
##
  __patsflab__ats2plpre_stream_vt_loop_45:
  $tmp109 = ATSPMVllazyval_eval($arg0);
  #ATScaseofseq_beg
  while(1)
  {
    #ATSbranchseq_beg
    __atstmplab44:
    if(ATSCKptriscons($tmp109)) { goto __atstmplab47; }
    __atstmplab45:
    $tmpret108 = 1;
    last;
    #ATSbranchseq_end
    #ATSbranchseq_beg
    __atstmplab46:
    __atstmplab47:
    $tmp110 = $tmp109->[0];
    $tmp111 = $tmp109->[1];
    #ATSINSfreecon($tmp109);
    $tmp112 = &{$env0->[0]}($env0, $tmp110);
    if($tmp112) {
      #ATStailcalseq_beg
      $apy0 = $tmp111;
      $arg0 = $apy0;
      goto __patsflab__ats2plpre_stream_vt_loop_45;
      #ATStailcalseq_end
    } else {
      atspre_lazy_vt_free($tmp111);
      $tmpret108 = 0;
    } #endif
    last;
    #ATSbranchseq_end
  } #end-of-while-loop;
  #ATScaseofseq_end
  return $tmpret108;
} #end-of-function


sub
ats2plpre_stream_vt_forall_method($)
{
##
  my($arg0) = @_;
##
  my $tmpret114;
##
  __patsflab_stream_vt_forall_method:
  $tmpret114 = _ats2plpre_stream_vt_patsfun_47__closurerize($arg0);
  return $tmpret114;
} #end-of-function


sub
_ats2plpre_stream_vt_patsfun_47($$)
{
##
  my($env0, $arg0) = @_;
##
  my $tmpret115;
##
  __patsflab__ats2plpre_stream_vt_patsfun_47:
  $tmpret115 = ats2plpre_stream_vt_forall_cloref($env0, $arg0);
  return $tmpret115;
} #end-of-function


sub
ats2plpre_stream_vt_foreach_cloref($$)
{
##
  my($arg0, $arg1) = @_;
##
##
  __patsflab_stream_vt_foreach_cloref:
  _ats2plpre_stream_vt_loop_49($arg1, $arg0);
  return;#_void
} #end-of-function


sub
_ats2plpre_stream_vt_loop_49($$)
{
##
  my($env0, $arg0) = @_;
##
  my $apy0;
  my $tmp118;
  my $tmp119;
  my $tmp120;
##
  __patsflab__ats2plpre_stream_vt_loop_49:
  $tmp118 = ATSPMVllazyval_eval($arg0);
  #ATScaseofseq_beg
  while(1)
  {
    #ATSbranchseq_beg
    __atstmplab48:
    if(ATSCKptriscons($tmp118)) { goto __atstmplab51; }
    __atstmplab49:
    #ATSINSmove_void;
    last;
    #ATSbranchseq_end
    #ATSbranchseq_beg
    __atstmplab50:
    __atstmplab51:
    $tmp119 = $tmp118->[0];
    $tmp120 = $tmp118->[1];
    #ATSINSfreecon($tmp118);
    &{$env0->[0]}($env0, $tmp119);
    #ATStailcalseq_beg
    $apy0 = $tmp120;
    $arg0 = $apy0;
    goto __patsflab__ats2plpre_stream_vt_loop_49;
    #ATStailcalseq_end
    last;
    #ATSbranchseq_end
  } #end-of-while-loop;
  #ATScaseofseq_end
  return;#_void
} #end-of-function


sub
ats2plpre_stream_vt_foreach_method($)
{
##
  my($arg0) = @_;
##
  my $tmpret122;
##
  __patsflab_stream_vt_foreach_method:
  $tmpret122 = _ats2plpre_stream_vt_patsfun_51__closurerize($arg0);
  return $tmpret122;
} #end-of-function


sub
_ats2plpre_stream_vt_patsfun_51($$)
{
##
  my($env0, $arg0) = @_;
##
##
  __patsflab__ats2plpre_stream_vt_patsfun_51:
  ats2plpre_stream_vt_foreach_cloref($env0, $arg0);
  return;#_void
} #end-of-function


sub
ats2plpre_stream_vt_iforeach_cloref($$)
{
##
  my($arg0, $arg1) = @_;
##
##
  __patsflab_stream_vt_iforeach_cloref:
  _ats2plpre_stream_vt_loop_53($arg1, 0, $arg0);
  return;#_void
} #end-of-function


sub
_ats2plpre_stream_vt_loop_53($$$)
{
##
  my($env0, $arg0, $arg1) = @_;
##
  my $apy0;
  my $apy1;
  my $tmp126;
  my $tmp127;
  my $tmp128;
  my $tmp130;
##
  __patsflab__ats2plpre_stream_vt_loop_53:
  $tmp126 = ATSPMVllazyval_eval($arg1);
  #ATScaseofseq_beg
  while(1)
  {
    #ATSbranchseq_beg
    __atstmplab52:
    if(ATSCKptriscons($tmp126)) { goto __atstmplab55; }
    __atstmplab53:
    #ATSINSmove_void;
    last;
    #ATSbranchseq_end
    #ATSbranchseq_beg
    __atstmplab54:
    __atstmplab55:
    $tmp127 = $tmp126->[0];
    $tmp128 = $tmp126->[1];
    #ATSINSfreecon($tmp126);
    &{$env0->[0]}($env0, $arg0, $tmp127);
    $tmp130 = ats2plpre_add_int1_int1($arg0, 1);
    #ATStailcalseq_beg
    $apy0 = $tmp130;
    $apy1 = $tmp128;
    $arg0 = $apy0;
    $arg1 = $apy1;
    goto __patsflab__ats2plpre_stream_vt_loop_53;
    #ATStailcalseq_end
    last;
    #ATSbranchseq_end
  } #end-of-while-loop;
  #ATScaseofseq_end
  return;#_void
} #end-of-function


sub
ats2plpre_stream_vt_iforeach_method($)
{
##
  my($arg0) = @_;
##
  my $tmpret131;
##
  __patsflab_stream_vt_iforeach_method:
  $tmpret131 = _ats2plpre_stream_vt_patsfun_55__closurerize($arg0);
  return $tmpret131;
} #end-of-function


sub
_ats2plpre_stream_vt_patsfun_55($$)
{
##
  my($env0, $arg0) = @_;
##
##
  __patsflab__ats2plpre_stream_vt_patsfun_55:
  ats2plpre_stream_vt_iforeach_cloref($env0, $arg0);
  return;#_void
} #end-of-function


sub
ats2plpre_stream_vt_rforeach_cloref($$)
{
##
  my($arg0, $arg1) = @_;
##
##
  __patsflab_stream_vt_rforeach_cloref:
  _ats2plpre_stream_vt_auxmain_57($arg1, $arg0);
  return;#_void
} #end-of-function


sub
_ats2plpre_stream_vt_auxmain_57($$)
{
##
  my($env0, $arg0) = @_;
##
  my $tmp135;
  my $tmp136;
  my $tmp137;
##
  __patsflab__ats2plpre_stream_vt_auxmain_57:
  $tmp135 = ATSPMVllazyval_eval($arg0);
  #ATScaseofseq_beg
  while(1)
  {
    #ATSbranchseq_beg
    __atstmplab56:
    if(ATSCKptriscons($tmp135)) { goto __atstmplab59; }
    __atstmplab57:
    #ATSINSmove_void;
    last;
    #ATSbranchseq_end
    #ATSbranchseq_beg
    __atstmplab58:
    __atstmplab59:
    $tmp136 = $tmp135->[0];
    $tmp137 = $tmp135->[1];
    #ATSINSfreecon($tmp135);
    _ats2plpre_stream_vt_auxmain_57($env0, $tmp137);
    &{$env0->[0]}($env0, $tmp136);
    last;
    #ATSbranchseq_end
  } #end-of-while-loop;
  #ATScaseofseq_end
  return;#_void
} #end-of-function


sub
ats2plpre_stream_vt_rforeach_method($)
{
##
  my($arg0) = @_;
##
  my $tmpret139;
##
  __patsflab_stream_vt_rforeach_method:
  $tmpret139 = _ats2plpre_stream_vt_patsfun_59__closurerize($arg0);
  return $tmpret139;
} #end-of-function


sub
_ats2plpre_stream_vt_patsfun_59($$)
{
##
  my($env0, $arg0) = @_;
##
##
  __patsflab__ats2plpre_stream_vt_patsfun_59:
  ats2plpre_stream_vt_rforeach_cloref($env0, $arg0);
  return;#_void
} #end-of-function


sub
ats2plpre_stream_vt_tabulate_cloref($)
{
##
  my($arg0) = @_;
##
  my $tmpret141;
##
  __patsflab_stream_vt_tabulate_cloref:
  $tmpret141 = _ats2plpre_stream_vt_auxmain_61($arg0, 0);
  return $tmpret141;
} #end-of-function


sub
_ats2plpre_stream_vt_auxmain_61($$)
{
##
  my($env0, $arg0) = @_;
##
  my $tmpret142;
##
  __patsflab__ats2plpre_stream_vt_auxmain_61:
  $tmpret142 = ATSPMVllazyval(_ats2plpre_stream_vt_patsfun_62__closurerize($env0, $arg0));
  return $tmpret142;
} #end-of-function


sub
_ats2plpre_stream_vt_patsfun_62($$$)
{
##
  my($env0, $env1, $arg0) = @_;
##
  my $tmpret143;
  my $tmp144;
  my $tmp145;
  my $tmp146;
##
  __patsflab__ats2plpre_stream_vt_patsfun_62:
  if($arg0) {
    $tmp144 = &{$env0->[0]}($env0, $env1);
    $tmp146 = ats2plpre_add_int1_int1($env1, 1);
    $tmp145 = _ats2plpre_stream_vt_auxmain_61($env0, $tmp146);
    $tmpret143 = [$tmp144, $tmp145];
  } else {
  } #endif
  return $tmpret143;
} #end-of-function


######
#ATSextcode_beg()
######
######
1; ##note that it is needed by 'use' or 'require'
######
######
#ATSextcode_end()
######
######
##
## end-of-compilation-unit
##
######
